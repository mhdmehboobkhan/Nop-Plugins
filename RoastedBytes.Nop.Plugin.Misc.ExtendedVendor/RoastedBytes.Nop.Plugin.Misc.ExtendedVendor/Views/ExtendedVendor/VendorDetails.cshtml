@model RoastedBytes.Nop.Plugin.Misc.ExtendedVendor.Models.VendorReviewSummaryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    Html.Partial("ExtendedVendor/_Includes");
    //title
    Html.AddTitleParts("Review Center");
}
@section left
{
    <div class="review-summary-block-container">
        <div class="review-summary-block">
            <h3>Vendor Review Summary</h3>
            <table class="table-rating-summary">
                @for (var index = 0; index < 5; index++)
                {
                    <tr>
                        <td>
                            @(5 - index) star
                        </td>
                        <td>
                            <div class="process-raty" data-readonly="true" data-score="@(5 - index)"></div>
                        </td>
                        <td class="count">
                            @Model.VendorRatingCounts[index]
                        </td>
                    </tr>
                }
                <tr class="total-row">
                    <td colspan="2">
                        Total Customers
                    </td>
                    <td class="count">
                        @Model.TotalVendorReviews
                    </td>
                </tr>

            </table>
        </div>
    </div>
}

<div class="page-title">
    <h2>Vendor Ratings & Reviews for @Model.VendorName</h2>
</div>

<div id="vendor-reviews" class="cui-tab-content">
    @if (!Model.VendorReviewDisplayModel.VendorReviews.Any())
    {
        <div class="infobox red">No ratings found for this vendor</div>
    }
    else
    {
        foreach (var review in Model.VendorReviewDisplayModel.VendorReviews)
        {
            <div class="vendor-review-block">
                <div class="vendor-details">
                    Customer : @review.CustomerName
                    <div class="product-purchased-details">
                        <label>Product Purchased:  </label><a href="@Url.RouteUrl("Product", new {SeName = review.ProductSeName})">@review.ProductName</a>
                        <label>Order# <a href="@Url.RouteUrl("OrderDetails", new { orderId = review.OrderId })">@review.OrderId</a></label>
                    </div>
                </div>

                <div class="review-details">
                    <div class="rating-data"><div class="process-raty" data-readonly="true" data-score="@review.Rating"></div></div>
                    <h3>@review.Title</h3>
                    <div class="review-date">Submitted on @review.CreatedOnUTC.ToString("dd MMMM yyyy")</div>
                    <p>@review.ReviewText</p>

                </div>
            </div>
        }
    }
</div>

